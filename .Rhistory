library(conflicted)
library(tidyverse)
df = dplyr::tibble(xx = seq(1, 10), yy = 1, zz = letters[1:10])
View(df)
ggplot(df) + aes(xx, yy, color = zz) + geom_tile() + theme_test()
ggplot(df) + aes(xx, yy, fill = zz) + geom_tile() + theme_test()
ggplot(df) + aes(xx, yy, fill = zz) + geom_tile() + theme_void()
df = dplyr::tibble(xx = seq(1, 12), yy = 1, zz = letters[1:12])
ggplot(df) + aes(xx, yy, fill = zz) + geom_tile() + theme_void()
## default descrete color scales
palette.colors()
## default descrete color scales
?palette.colors()
## default descrete color scales
p
p = ggplot(df) + aes(xx, yy, fill = zz) + geom_tile() + theme_void()
## default descrete color scales
p
p + scale_fill_brewer(palette = "Set1")
p + scale_fill_brewer(palette = "Set2")
p + scale_fill_brewer(palette = "Set3")
p + scale_fill_brewer(palette = "Pastel2")
p + scale_fill_brewer(palette = "Pastel1")
p + scale_fill_brewer(palette = "Paired")
p + scale_fill_brewer(palette = "Dark2")
p + scale_fill_brewer(palette = "Accent")
p + scale_fill_brewer(palette = "Dark1")
p + scale_fill_brewer(palette = "Dark2")
?scale_fill_brewer
p + scale_fill_brewer(palette = "PiYg")
p + scale_fill_brewer(palette = "PiYG")
?palette.colors
?palette.pals()
?palette.pals()
palette.pals()
?scale_fill_discrete
p + scale_fill_discrete(type = palette.colors("R3"))
?palette.colors
p + scale_fill_discrete(type = palette.colors(n = 12, "R3"))
## default descrete color scales
p
p + scale_fill_discrete(type = palette.colors(n = 8, "R3"))
df = dplyr::tibble(xx = seq(1, 8), yy = 1, zz = letters[1:8])
p = ggplot(df) + aes(xx, yy, fill = zz) + geom_tile() + theme_void()
## default descrete color scales
p
p + scale_fill_brewer(palette = "Set3")
p + scale_fill_brewer(palette = "Set2")
p + scale_fill_brewer(palette = "Set1")
p + scale_fill_brewer(palette = "Pastel2")
p + scale_fill_brewer(palette = "Pastel1")
p + scale_fill_brewer(palette = "Paired")
p + scale_fill_brewer(palette = "Dark2")
p + scale_fill_brewer(palette = "Accent")
p + scale_fill_discrete(type = palette.colors(n = 8, "R3"))
?palette.pals()
palette.pals()
p + scale_fill_discrete(type = palette.colors(n = 8, "R4"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Dark 2"))
p + scale_fill_brewer(palette = "Dark2")
p + scale_fill_discrete(type = palette.colors(n = 8, "R3"))
p + scale_fill_discrete(type = palette.colors(n = 8, "R4"))
p + scale_fill_discrete(type = palette.colors(n = 8, "ggplot2"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Okabe-Ito"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Tableu 10"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Tableu 10"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Tableau 10"))
p + scale_fill_discrete(type = palette.colors(n = 10, "Tableau 10"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Tableau 10"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Classic Tableau"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Polychrome 36"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Alphabet"))
p + scale_fill_discrete(type = palette.colors(n = 8, "R3"))
p + scale_fill_discrete(type = palette.colors(n = 8, "R4"))
p + scale_fill_discrete(type = palette.colors(n = 8, "ggplot2"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Okabe-Ito"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Tableau 10"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Okabe-Ito"))
p + scale_fill_brewer(palette = "Paired")
## default descrete color scales
p
p + scale_fill_viridis_d(option = "A")
p + scale_fill_viridis_d(option = "A")
p + scale_fill_viridis_d(option = "B")
p + scale_fill_viridis_d(option = "C")
p + scale_fill_viridis_d(option = "D")
p + scale_fill_viridis_d(option = "E")
p + scale_fill_viridis_d(option = "F")
p + scale_fill_viridis_d(option = "G")
p + scale_fill_viridis_d(option = "H")
p + scale_fill_viridis_d(option = "I")
palette.colors(n = 8, "R3")
palette.colors(n = 8, "R3")
seecol(palette.colors(n = 8, "Okabe-Ito"))
p + scale_fill_discrete(type = palette.colors(n = 8, "Okabe-Ito"))
library(conflicted)
library(tidyverse)
library(phytools)
library(phangorn)
?ntree()
?ntree
tr = ape::rtree(n = 4, rooted = TRUE)
set.seed(12345)
tr = ape::rtree(n = 4, rooted = TRUE)
tr
plot(tr)
set.seed(1234)
tr = ape::rtree(n = 4, rooted = TRUE)
plot(tr)
?simSeq
phangorn::simSeq(tr, l = 100, type = "DNA", rate = 1, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = 1, ancestral = TRUE)
seq$t2
seq$t4
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .1, ancestral = TRUE)
seq$t4
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .1, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .01, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .01, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .01, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .01, ancestral = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .01, ancestral = TRUE)
as.character(seq)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .05, ancestral = TRUE)
as.character(seq)
library(ggtree)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .05, ancestral = TRUE)
s = as.character(seq)
p = ggtree(tr) + geom_tiplab(size=3)
msaplot(p, s, offset=3, width=2)
genotype = as.character(seq) |> as.tibble()
genotype = as.character(seq) |> as_tibble()
View(genotype)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .05, ancestral = TRUE)
genotype = as.character(seq)
genotype
p = ggtree(tr) + geom_tiplab(size=3)
gheatmap(p, genotype, offset=5, width=0.5, font.size=3, colnames_angle=-45, hjust=0)
df_genotype = dplyr::as_tibble(genotype) +
t()
df_genotype = dplyr::as_tibble(genotype) |>
t()
df_genotype = dplyr::as_tibble(genotype)
df_genotype = dplyr::as_tibble(genotype) |>
tibble::rownames_to_column(var = "node")
df_genotype = dplyr::as_tibble(genotype) |>
tibble::rownames_to_column(var = "node") |>
dplyr::filter(stringr::str_starts(node, "t"))
View(df_genotype)
df_genotype = dplyr::as_tibble(genotype) |>
tibble::rownames_to_column(var = "node")
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .05, ancestral = TRUE)
genotype = as.character(seq)
df_genotype = dplyr::as_tibble(genotype)
set.seed(1234)
tr = ape::rtree(n = 4, rooted = TRUE)
seq = phangorn::simSeq(tr, l = 100, type = "DNA", rate = .05, ancestral = TRUE)
genotype = as.character(seq)
df_genotype = dplyr::as_tibble(genotype)
genotype
df_genotype = dplyr::as_tibble(genotype)
genotype = as_tibble(seq)
View(genotype)
df_genotype = as_tibble(seq) |>
dplyr::select(dplyr::starts_with("t"))
df_genotype = as_tibble(seq) |>
dplyr::select(dplyr::starts_with("t"))
View(df_genotype)
tibble::rownames_to_column(var = "position")
df_genotype = as_tibble(seq) |>
dplyr::select(dplyr::starts_with("t")) |>
tibble::rownames_to_column(var = "pos")
df_genotype = as_tibble(seq) |>
dplyr::select(dplyr::starts_with("t")) |>
tibble::rownames_to_column(var = "pos") |>
tidyr::pivot_longer(dplyr::starts_with("t"), names_to = "tip", values_to = "gt")
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt))
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(label = gt, fill = gt))
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(labels = gt, fill = gt))
?geom_tile
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(lebel = gt), color = "#FFFFFF")
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(lebels = gt), color = "#FFFFFF")
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF")
nucl_color = c(
"A" = "#E69F00",
"T" = "#56B4E9",
"G" = "#009E73",
"C" = "#F0E442"
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color)
nucl_color = c(
"A" = "#E69F00",
"T" = "#56B4E9",
"G" = "#009E73",
"C" = "#F0E442"
)
nucl_color = c(
"a" = "#E69F00",
"t" = "#56B4E9",
"g" = "#009E73",
"c" = "#F0E442"
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color)
nucl_color = c(
"a" = "#D55E00",
"t" = "#0072B2",
"g" = "#009E73",
"c" = "#F0E442"
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_test()
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_minimal()
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_void()
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_bw()
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank()
)
df_genotype = as_tibble(seq) |>
dplyr::select(dplyr::starts_with("t")) |>
tibble::rownames_to_column(var = "pos") |>
dplyr::mutate(pos = as.numeric(pos)) |>
tidyr::pivot_longer(dplyr::starts_with("t"), names_to = "tip", values_to = "gt")
nucl_color = c(
"a" = "#D55E00",
"t" = "#0072B2",
"g" = "#009E73",
"c" = "#F0E442"
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank()
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_bw() +
theme(
legend.position = "none",
panel.grid = element_blank(),
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#FFFFFF") +
scale_fill_manual(values = nucl_color) +
theme_bw() +
theme(
legend.position = "none",
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
ggplot(df_genotype) +
aes(x = pos, y = tip) +
geom_tile(aes(fill = gt)) +
geom_text(aes(label = gt), color = "#444444") +
scale_fill_manual(values = nucl_color) +
theme_bw() +
theme(
legend.position = "none",
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank()
)
Sys.getenv()
.libPaths()
?pak::pkg_install()
install.packages("pak")
?pak::pkg_install()
.libPaths()[[1L]]
pkgs = "
ape
BiocManager
conflicted
devtools
ggrepel
Rcpp
tidyverse
"
pkgs = readLines(textConnection(trimws(pkgs)))
installed.packages()
pkgs = c(
"ape",
"BiocManager",
"conflicted",
"devtools",
"ggrepel",
"patchwork"
"Rcpp",
pkgs = c(
"ape",
"BiocManager",
"conflicted",
"devtools",
"ggrepel",
"patchwork",
"Rcpp",
"tidyverse"
)
pak::pkg_install(pkgs)
biopkgs = c(
"clusterProfiler",
"ggtree"
)
biopkgs = c(
"clusterProfiler",
"ggtree"
)
pak::pkg_install(biocpkgs)
biopkgs = c(
"clusterProfiler",
"ggtree"
)
pak::pkg_install(biopkgs)
biopkgs = c(
"clusterProfiler",
"ggtree",
"phytools"
)
pak::pkg_install(biopkgs)
